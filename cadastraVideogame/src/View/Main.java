/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.awt.CardLayout;
import java.awt.Toolkit;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/*
 * DICA! SEMPRE adicione as classes abaixo nos componentes do aplicativo.
 */
import Control.PopUps;
import Model.DbConnection;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author andre.ataide
 */
public class Main extends javax.swing.JFrame {

    // Faz conexão DAO
    private DbConnection dbConnection = new DbConnection();

    // Inicializa atributos DAO
    private Connection conn = null;
    private PreparedStatement pstm = null;
    private ResultSet res = null;

    /**
     * Creates new form Main
     */
    public Main() {
        // Inicializa componentes da interface gráfica
        initComponents();

        // Altera o ícone do jFrame
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../images/box_flat.png")));

        /*
         * As linhas abaixo marcadas com o comentário "Estética → ", alteram um pouco a estética da tabela.
         * Elas não interferem, além do visual, no funcionamento do aplicativo.
         */
        // Estética → Centraliza conteúdo das células de cabeçalho
        JTableHeader header = tableListAll.getTableHeader();
        DefaultTableCellRenderer tableHeader = (DefaultTableCellRenderer) header.getDefaultRenderer();
        tableHeader.setHorizontalAlignment(SwingConstants.CENTER);

        // Estética → Centraliza verticalmente o conteúdo das células
        DefaultTableCellRenderer tableCell = new DefaultTableCellRenderer();
        tableCell.setHorizontalAlignment(SwingConstants.CENTER);

        // Estética → Define altura padrão das linhas
        tableListAll.setRowHeight(25);

        // Estética → Centraliza os conteúdos das células da coluna[0] Id
        tableListAll.getColumnModel().getColumn(0).setCellRenderer(tableCell);

        // Estética → Centraliza os conteúdos das células da coluna[1] Data
        tableListAll.getColumnModel().getColumn(1).setCellRenderer(tableCell);

        // Estética → Centraliza os conteúdos das células da coluna[3] Status
        tableListAll.getColumnModel().getColumn(3).setCellRenderer(tableCell);

        // Chama método que lista dados dentro da tabela
        readAll();

        // Obtém a cor de fundo do painel que contém os campos "view"
        int bgColor = panelRead.getBackground().getRGB();

        // Define a cor de fundo dos campos com a cor de fundo do painel que os contém
        txtViewId.setBackground(new Color(bgColor));
        txtViewStatus.setBackground(new Color(bgColor));
        txtViewDate.setBackground(new Color(bgColor));
        txtViewType.setBackground(new Color(bgColor));
        txtViewTitle.setBackground(new Color(bgColor));
        txtViewPlataforma.setBackground(new Color(bgColor));
        txtViewMidia.setBackground(new Color(bgColor));
        txtViewSinopse.setBackground(new Color(bgColor));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainCards = new javax.swing.JPanel();
        panelReadAll = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableListAll = new javax.swing.JTable();
        panelUpdate = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEditDate = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEditStatus = new javax.swing.JCheckBox();
        txtEditId = new javax.swing.JTextField();
        txtEditType = new javax.swing.JTextField();
        txtEditTitle = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtEditSinopse = new javax.swing.JTextArea();
        btnEditSave = new javax.swing.JButton();
        btnEditReset = new javax.swing.JButton();
        btnEditReset1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtEditPlataforma = new javax.swing.JTextField();
        txtEditMidia = new javax.swing.JTextField();
        panelRead = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblViewSinope = new javax.swing.JLabel();
        lblViewDate = new javax.swing.JLabel();
        lblViewType = new javax.swing.JLabel();
        lblViewId = new javax.swing.JLabel();
        lblViewTitle = new javax.swing.JLabel();
        lblViewStatus = new javax.swing.JLabel();
        btnViewEdit = new javax.swing.JButton();
        btnViewDelete = new javax.swing.JButton();
        btnListAll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtViewSinopse = new javax.swing.JTextArea();
        txtViewId = new javax.swing.JTextField();
        txtViewStatus = new javax.swing.JTextField();
        txtViewDate = new javax.swing.JTextField();
        txtViewType = new javax.swing.JTextField();
        txtViewTitle = new javax.swing.JTextField();
        lblViewPlataforma = new javax.swing.JLabel();
        txtViewPlataforma = new javax.swing.JTextField();
        lblViewMidia = new javax.swing.JLabel();
        txtViewMidia = new javax.swing.JTextField();
        panelInsert = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btnAddListAll = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtAddType = new javax.swing.JTextField();
        txtAddTitle = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAddSinopse = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnAddSave = new javax.swing.JButton();
        btnAddReset = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAddPlataforma = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtAddMidia = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuListAll = new javax.swing.JMenuItem();
        mnuAdd = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuHelpSupport = new javax.swing.JMenuItem();
        mnuHelpUpdates = new javax.swing.JMenuItem();
        mnuHelpSite = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadatro de Trecos");

        pnlMainCards.setLayout(new java.awt.CardLayout());

        btnNew.setText("Novo");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnView.setText("Visualizar Selecionado");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tableListAll.setAutoCreateRowSorter(true);
        tableListAll.setFont(tableListAll.getFont().deriveFont(tableListAll.getFont().getSize()+3f));
        tableListAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data", "Tipo", "Título", "Plataforma", "Mídia", "Sinopse", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableListAll.setColumnSelectionAllowed(true);
        tableListAll.setMinimumSize(new java.awt.Dimension(100, 100));
        tableListAll.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableListAll.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tableListAll);
        tableListAll.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tableListAll.getColumnModel().getColumnCount() > 0) {
            tableListAll.getColumnModel().getColumn(0).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(0).setMaxWidth(50);
            tableListAll.getColumnModel().getColumn(1).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(1).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(2).setMinWidth(50);
            tableListAll.getColumnModel().getColumn(2).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(2).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(3).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(3).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(4).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(4).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(4).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(5).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(5).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(6).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(6).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(6).setMaxWidth(100);
            tableListAll.getColumnModel().getColumn(7).setMinWidth(30);
            tableListAll.getColumnModel().getColumn(7).setPreferredWidth(50);
            tableListAll.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        javax.swing.GroupLayout panelReadAllLayout = new javax.swing.GroupLayout(panelReadAll);
        panelReadAll.setLayout(panelReadAllLayout);
        panelReadAllLayout.setHorizontalGroup(
            panelReadAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReadAllLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReadAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReadAllLayout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelReadAllLayout.setVerticalGroup(
            panelReadAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReadAllLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReadAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMainCards.add(panelReadAll, "cardReadAll");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("Editar Registro");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Altere apenas os dados necessários mantendo os outros intactos.");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("ID:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tipo:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Data:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Título:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Sinopse:");

        txtEditDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Status:");

        txtEditStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditStatus.setText("On");
        txtEditStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditStatusActionPerformed(evt);
            }
        });

        txtEditId.setEditable(false);
        txtEditId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtEditType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtEditTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtEditSinopse.setColumns(20);
        txtEditSinopse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditSinopse.setLineWrap(true);
        txtEditSinopse.setRows(5);
        txtEditSinopse.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtEditSinopse);

        btnEditSave.setText("Salvar");
        btnEditSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditSaveActionPerformed(evt);
            }
        });

        btnEditReset.setText("Recarregar");
        btnEditReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditResetActionPerformed(evt);
            }
        });

        btnEditReset1.setText("Listar Todos");
        btnEditReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditReset1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Plataforma:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Mídia:");

        txtEditPlataforma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtEditMidia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditMidia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditMidiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdateLayout = new javax.swing.GroupLayout(panelUpdate);
        panelUpdate.setLayout(panelUpdateLayout);
        panelUpdateLayout.setHorizontalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelUpdateLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEditReset1)
                                .addGap(10, 10, 10))))
                    .addGroup(panelUpdateLayout.createSequentialGroup()
                        .addContainerGap(68, Short.MAX_VALUE)
                        .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelUpdateLayout.createSequentialGroup()
                                .addComponent(btnEditSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEditReset))
                            .addGroup(panelUpdateLayout.createSequentialGroup()
                                .addComponent(txtEditId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEditStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtEditType)
                            .addComponent(txtEditTitle)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtEditDate)
                            .addComponent(txtEditPlataforma)
                            .addComponent(txtEditMidia))
                        .addGap(0, 96, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelUpdateLayout.setVerticalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnEditReset1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(txtEditStatus)
                    .addComponent(txtEditId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEditDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(txtEditPlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtEditMidia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditSave)
                    .addComponent(btnEditReset))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pnlMainCards.add(panelUpdate, "cardEdit");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel3.setText("Visualizar Registro");

        lblViewSinope.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewSinope.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewSinope.setText("Sinopse:");

        lblViewDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewDate.setText("Data:");

        lblViewType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewType.setText("Tipo:");

        lblViewId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewId.setText("ID:");

        lblViewTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewTitle.setText("Título:");

        lblViewStatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewStatus.setText("Status:");

        btnViewEdit.setText("Editar Registro");
        btnViewEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditActionPerformed(evt);
            }
        });

        btnViewDelete.setText("Apagar Registro");
        btnViewDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDeleteActionPerformed(evt);
            }
        });

        btnListAll.setText("Listar Todos");
        btnListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        txtViewSinopse.setEditable(false);
        txtViewSinopse.setColumns(20);
        txtViewSinopse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewSinopse.setLineWrap(true);
        txtViewSinopse.setRows(5);
        txtViewSinopse.setWrapStyleWord(true);
        txtViewSinopse.setBorder(null);
        jScrollPane1.setViewportView(txtViewSinopse);

        txtViewId.setEditable(false);
        txtViewId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewId.setBorder(null);

        txtViewStatus.setEditable(false);
        txtViewStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtViewStatus.setBorder(null);
        txtViewStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewStatusActionPerformed(evt);
            }
        });

        txtViewDate.setEditable(false);
        txtViewDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewDate.setBorder(null);
        txtViewDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewDateActionPerformed(evt);
            }
        });

        txtViewType.setEditable(false);
        txtViewType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewType.setBorder(null);

        txtViewTitle.setEditable(false);
        txtViewTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewTitle.setBorder(null);
        txtViewTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewTitleActionPerformed(evt);
            }
        });

        lblViewPlataforma.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewPlataforma.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewPlataforma.setText("Plataforma:");

        txtViewPlataforma.setEditable(false);
        txtViewPlataforma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewPlataforma.setBorder(null);
        txtViewPlataforma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewPlataformaActionPerformed(evt);
            }
        });

        lblViewMidia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblViewMidia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewMidia.setText("Midia:");

        txtViewMidia.setEditable(false);
        txtViewMidia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtViewMidia.setBorder(null);
        txtViewMidia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewMidiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelReadLayout = new javax.swing.GroupLayout(panelRead);
        panelRead.setLayout(panelReadLayout);
        panelReadLayout.setHorizontalGroup(
            panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReadLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(btnListAll)
                        .addGap(16, 16, 16))
                    .addGroup(panelReadLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelReadLayout.createSequentialGroup()
                                .addComponent(lblViewMidia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtViewMidia))
                            .addGroup(panelReadLayout.createSequentialGroup()
                                .addComponent(lblViewPlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtViewPlataforma))
                            .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelReadLayout.createSequentialGroup()
                                    .addComponent(lblViewId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtViewId, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblViewStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtViewStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReadLayout.createSequentialGroup()
                                    .addComponent(lblViewDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtViewDate, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReadLayout.createSequentialGroup()
                                    .addComponent(lblViewType, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtViewType, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelReadLayout.createSequentialGroup()
                                    .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblViewTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblViewSinope, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(panelReadLayout.createSequentialGroup()
                                            .addComponent(btnViewEdit)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                            .addComponent(btnViewDelete))
                                        .addComponent(txtViewTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelReadLayout.setVerticalGroup(
            panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnListAll))
                .addGap(31, 31, 31)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewId)
                    .addComponent(lblViewStatus)
                    .addComponent(txtViewId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtViewStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewDate)
                    .addComponent(txtViewDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewType)
                    .addComponent(txtViewType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewTitle)
                    .addComponent(txtViewTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewPlataforma)
                    .addComponent(txtViewPlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewMidia)
                    .addComponent(txtViewMidia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblViewSinope)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewEdit)
                    .addComponent(btnViewDelete))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pnlMainCards.add(panelRead, "cardView");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel10.setText("Novo Registro");

        btnAddListAll.setText("Listar Todos");
        btnAddListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddListAllActionPerformed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Todos os campos devem ser preenchidos.");

        txtAddType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddTypeActionPerformed(evt);
            }
        });

        txtAddTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddTitleActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Sinopse:");

        txtAddSinopse.setColumns(20);
        txtAddSinopse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddSinopse.setLineWrap(true);
        txtAddSinopse.setRows(5);
        txtAddSinopse.setWrapStyleWord(true);
        jScrollPane4.setViewportView(txtAddSinopse);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Título:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Tipo:");

        btnAddSave.setText("Salvar");
        btnAddSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaveActionPerformed(evt);
            }
        });

        btnAddReset.setText("Limpar");
        btnAddReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResetActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Campos ID, Data e Status são preenchidos automaticamente pelo sistema.");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Plataforma:");

        txtAddPlataforma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddPlataforma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddPlataformaActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Mídia:");

        txtAddMidia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddMidia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddMidiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInsertLayout = new javax.swing.GroupLayout(panelInsert);
        panelInsert.setLayout(panelInsertLayout);
        panelInsertLayout.setHorizontalGroup(
            panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInsertLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInsertLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelInsertLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                        .addComponent(btnAddListAll)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInsertLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelInsertLayout.createSequentialGroup()
                                .addComponent(btnAddSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddReset))
                            .addComponent(txtAddTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(txtAddType, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtAddPlataforma, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(txtAddMidia, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInsertLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panelInsertLayout.setVerticalGroup(
            panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInsertLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(btnAddListAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtAddPlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtAddMidia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddSave)
                    .addComponent(btnAddReset))
                .addGap(63, 63, 63))
        );

        pnlMainCards.add(panelInsert, "cardInsert");

        mnuFile.setText("Arquivo");

        mnuListAll.setText("Listar todos...");
        mnuListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListAllActionPerformed(evt);
            }
        });
        mnuFile.add(mnuListAll);

        mnuAdd.setText("Novo...");
        mnuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAddActionPerformed(evt);
            }
        });
        mnuFile.add(mnuAdd);

        mnuExit.setText("Sair");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        jMenuBar1.add(mnuFile);

        mnuHelp.setText("Ajuda");

        mnuHelpSupport.setText("Suporte");
        mnuHelp.add(mnuHelpSupport);

        mnuHelpUpdates.setText("Atualizações");
        mnuHelp.add(mnuHelpUpdates);

        mnuHelpSite.setText("Site");
        mnuHelp.add(mnuHelpSite);

        jMenuBar1.add(mnuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(516, 443));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListAllActionPerformed

        // Exibir o card "cardReadAll"
        openCard("cardReadAll");

    }//GEN-LAST:event_mnuListAllActionPerformed

    private void mnuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAddActionPerformed

        // Exibir o card "cardInsert"
        openCard("cardInsert");

    }//GEN-LAST:event_mnuAddActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed

        // Fecha o aplicativo usando popup de confirmação
        exitApp();

    }//GEN-LAST:event_mnuExitActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        openCard("cardInsert");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed

        // Obtém o registro selecionado na tabela e o exibe → view
        loadSelected("view");

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllActionPerformed

        // Exibir o card "cardReadAll"
        openCard("cardReadAll");

    }//GEN-LAST:event_btnListAllActionPerformed

    private void btnViewDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDeleteActionPerformed

        // Converte o Id do campo para inteiro e chama o método para apagar
        deleteData(Integer.parseInt(txtViewId.getText()));

    }//GEN-LAST:event_btnViewDeleteActionPerformed

    private void txtViewStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewStatusActionPerformed

    private void txtViewDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewDateActionPerformed

    private void txtViewTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewTitleActionPerformed

    private void btnViewEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditActionPerformed

        // Obtém o registro selecionado na tabela e o edita → edit
        loadSelected("edit");

    }//GEN-LAST:event_btnViewEditActionPerformed

    private void txtAddTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddTypeActionPerformed

    private void txtAddTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddTitleActionPerformed

    private void btnAddListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddListAllActionPerformed

        // Exibir o card "cardReadAll"
        openCard("cardReadAll");

    }//GEN-LAST:event_btnAddListAllActionPerformed

    private void btnAddResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResetActionPerformed

        // Limpa todos campos do formulário
        formAddClear();
    }//GEN-LAST:event_btnAddResetActionPerformed

    private void btnAddSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaveActionPerformed

        // Salva o novo registro no banco de dados
        formAddSave();

    }//GEN-LAST:event_btnAddSaveActionPerformed

    private void btnEditReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditReset1ActionPerformed

        // Exibir o card "cardReadAll"
        openCard("cardReadAll");
    }//GEN-LAST:event_btnEditReset1ActionPerformed

    private void btnEditResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditResetActionPerformed

        // Obtém o registro selecionado na tabela e o edita → edit
        loadSelected("edit");
    }//GEN-LAST:event_btnEditResetActionPerformed

    private void btnEditSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSaveActionPerformed

        // Atualiza o registro selecionado no banco de dados
        updateData();
    }//GEN-LAST:event_btnEditSaveActionPerformed

    private void txtEditStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditStatusActionPerformed

    private void txtEditMidiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditMidiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditMidiaActionPerformed

    private void txtViewPlataformaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewPlataformaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewPlataformaActionPerformed

    private void txtViewMidiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewMidiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewMidiaActionPerformed

    private void txtAddPlataformaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddPlataformaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddPlataformaActionPerformed

    private void txtAddMidiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddMidiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddMidiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddListAll;
    private javax.swing.JButton btnAddReset;
    private javax.swing.JButton btnAddSave;
    private javax.swing.JButton btnEditReset;
    private javax.swing.JButton btnEditReset1;
    private javax.swing.JButton btnEditSave;
    private javax.swing.JButton btnListAll;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewDelete;
    private javax.swing.JButton btnViewEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblViewDate;
    private javax.swing.JLabel lblViewId;
    private javax.swing.JLabel lblViewMidia;
    private javax.swing.JLabel lblViewPlataforma;
    private javax.swing.JLabel lblViewSinope;
    private javax.swing.JLabel lblViewStatus;
    private javax.swing.JLabel lblViewTitle;
    private javax.swing.JLabel lblViewType;
    private javax.swing.JMenuItem mnuAdd;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuHelpSite;
    private javax.swing.JMenuItem mnuHelpSupport;
    private javax.swing.JMenuItem mnuHelpUpdates;
    private javax.swing.JMenuItem mnuListAll;
    private javax.swing.JPanel panelInsert;
    private javax.swing.JPanel panelRead;
    private javax.swing.JPanel panelReadAll;
    private javax.swing.JPanel panelUpdate;
    private javax.swing.JPanel pnlMainCards;
    private javax.swing.JTable tableListAll;
    private javax.swing.JTextField txtAddMidia;
    private javax.swing.JTextField txtAddPlataforma;
    private javax.swing.JTextArea txtAddSinopse;
    private javax.swing.JTextField txtAddTitle;
    private javax.swing.JTextField txtAddType;
    private javax.swing.JTextField txtEditDate;
    private javax.swing.JTextField txtEditId;
    private javax.swing.JTextField txtEditMidia;
    private javax.swing.JTextField txtEditPlataforma;
    private javax.swing.JTextArea txtEditSinopse;
    private javax.swing.JCheckBox txtEditStatus;
    private javax.swing.JTextField txtEditTitle;
    private javax.swing.JTextField txtEditType;
    private javax.swing.JTextField txtViewDate;
    private javax.swing.JTextField txtViewId;
    private javax.swing.JTextField txtViewMidia;
    private javax.swing.JTextField txtViewPlataforma;
    private javax.swing.JTextArea txtViewSinopse;
    private javax.swing.JTextField txtViewStatus;
    private javax.swing.JTextField txtViewTitle;
    private javax.swing.JTextField txtViewType;
    // End of variables declaration//GEN-END:variables

    // Abre um card 
    public void openCard(String cardName) {

        // Códigos para selecionar e exibir o card solicitado
        // Um card é selecionado pelo atributo "cardName" deste
        CardLayout card = (CardLayout) pnlMainCards.getLayout();
        card.show(pnlMainCards, cardName);

    }

    // Lê todos os registros válidos e popula a tabela
    private void readAll() {

        try {

            // Acessa a tabela e o model (dados) dela
            DefaultTableModel tableModel = (DefaultTableModel) tableListAll.getModel();

            // Apaga todas as linhas da tabela para que sejam criadas novamente
            tableModel.setNumRows(0);

            // Faz conexão com o banco de dados
            conn = dbConnection.dbConnect();

            // SQL → Selecione todos os registros da tabela trecos, exceto se status = 'del'
            String sql = "SELECT t_id, t_date,t_type, t_title, t_plataforma, t_midia, t_sinopse, t_status FROM videogame WHERE t_status != 'del'";

            // Prepara, filtra e sanitiza o SQL antes de executar
            pstm = conn.prepareStatement(sql);

            // Executa query e armazena no "Resultset" → res
            res = pstm.executeQuery();

            // Loop para receber os dados de cada linha do resultado
            while (res.next()) {

                // Adiciona e exibe dados do registro atual em uma nova linha da tabela
                tableModel.addRow(new Object[]{
                    res.getInt("t_id"),
                    res.getString("t_date"),
                    res.getString("t_type"),
                    res.getString("t_title"),
                    res.getString("t_plataforma"),
                    res.getString("t_midia"),
                    res.getString("t_sinopse"),
                    res.getString("t_status")
                });

            }

        } catch (SQLException error) {

            // Se ocorrer erro de SQL, exibe no popup
            PopUps.showError("Main.readAll\n" + error);

        } finally {

            // Fecha conexões e recursos abertos
            dbConnection.dbClose(conn, pstm, res);

        }
    }

    // Carrega o registro selecionado na tabela
    private void loadSelected(String action) {
        try {

            // Obtém o número da linha selecionada na tabela
            int selected = tableListAll.getSelectedRow();

            // Se nada foi selecionado ao clicar...
            if (selected < 0) {

                // Mostra uma mensagem de erro
                PopUps.showAlert("Selecione um item primeiro.");

                // Se selecionou uma linha...
            } else {

                // Obtém o valor da coluna Id (índice 0) da linha selecionada
                int selectedId = (int) tableListAll.getModel().getValueAt(selected, 0);

                // SQL → Selecione o registro à partir do ID, exceto com status = 'del'
                String sql = "SELECT * FROM videogame WHERE t_id = ? AND t_status != 'del'";

                // Conexão com o banco de dados
                conn = dbConnection.dbConnect();

                // Prepara, filtra e sanitiza o SQL antes de executar
                pstm = conn.prepareStatement(sql);

                // Substitui o "?" na query pelo Id do registro
                pstm.setInt(1, selectedId);

                // Executa a query e armazena resultado(s) em res
                res = pstm.executeQuery();

                // Carrega o método correto de acordo com a ação escolhida → action
                switch (action) {
                    case "view" ->
                        viewData(res);
                    case "edit" ->
                        editData(res);
                    default ->
                        PopUps.showAlert("Nenhum registro foi selecinado.");
                }

            }

        } catch (SQLException error) {

            // Se ocorrer erro de SQL, exibe no popup
            PopUps.showError("Main.loadSelected\n" + error);

        } finally {

            // Fecha conexões e recursos abertos      
            dbConnection.dbClose(conn, pstm, res);

        }
    }

    // Exibe dados do registro no painel de visualização de registro único
    private void viewData(ResultSet res) {
        try {

            /// Recebe o registro do banco de dados
            res.next();

            // Define a cor do status conforme o valor
            Color fgColor = new Color(51, 152, 51); // Verde escuro
            String status = res.getString("t_status");
            if (status.equals("on")) {
                txtViewStatus.setForeground(fgColor);
            } else {
                txtViewStatus.setForeground(Color.RED);
            }

            // Exibe nos campos do formulário de visualização
            txtViewId.setText(res.getString("t_id"));
            txtViewDate.setText(res.getString("t_date"));
            txtViewType.setText(res.getString("t_type"));
            txtViewTitle.setText(res.getString("t_title"));
            txtViewPlataforma.setText(res.getString("t_plataforma"));
            txtViewMidia.setText(res.getString("t_midia"));
            txtViewSinopse.setText(res.getString("t_sinopse"));
            txtViewStatus.setText(status);

            // Mostra o card com os dados do registro
            openCard("cardView");

        } catch (SQLException error) {

            // Se ocorrer erro de SQL, exibe no popup
            PopUps.showError("Main.viewData\n" + error);

        } finally {

            // Fecha conexões e recursos abertos      
            dbConnection.dbClose(null, null, res);

        }
    }

    // Edita dados do registro
    private void editData(ResultSet res) {

        try {

            /// Recebe o registro do banco de dados
            res.next();

            // Exibe nos campos do formulário de visualização
            txtEditId.setText(res.getString("t_id"));
            txtEditDate.setText(res.getString("t_date"));
            txtEditType.setText(res.getString("t_type"));
            txtEditTitle.setText(res.getString("t_title"));
            txtEditPlataforma.setText(res.getString("t_plataforma"));
            txtEditMidia.setText(res.getString("t_midia"));
            txtEditSinopse.setText(res.getString("t_sinopse"));

            // Se o satus = "on"...
            if (res.getString("t_status").equals("on")) {

                // Seleciona o checkbox
                txtEditStatus.setSelected(true);

                // Se o status é "off"...
            } else {

                // Não seleciona o checkbox
                txtEditStatus.setSelected(false);

            }

            // Mostra o card com os dados do registro
            openCard("cardEdit");

        } catch (SQLException error) {

            // Se ocorrer erro de SQL, exibe no popup
            PopUps.showError("Main.editData\n" + error);

        } finally {

            // Fecha conexões e recursos abertos      
            dbConnection.dbClose(null, null, res);

        }

    }

    // Apaga o registro selecionado
    private void deleteData(int dataId) {

        // Cria caixa de diálogo popup para confirmação
        int dialogButton = PopUps.showConfirm("Oooops!", "Tem certeza que deseja apagar o registro?");

        // Se clicou em [Sim]
        if (dialogButton == 0) {

            try {

                // SQL → Atualiza a tabela trecos com o campos status = 'del'
                String sql = "UPDATE videogame SET t_status = 'del' WHERE t_id = ?";

                // Conexão com o banco de dados
                conn = dbConnection.dbConnect();

                // Prepara, filtra e sanitiza o SQL antes de executar
                pstm = conn.prepareStatement(sql);

                // Substitui "?" pelo id do registro
                pstm.setInt(1, dataId);

                // Executa a query
                pstm.executeUpdate();

                // Atualiza a listagem de registros
                readAll();

                // Mostra a listagem de registros
                openCard("cardReadAll");

            } catch (SQLException error) {

                // Se ocorrer erro de SQL, exibe no popup
                PopUps.showError("Main.deleteData\n" + error);

            } finally {

                // Fecha conexões e recursos abertos      
                dbConnection.dbClose(conn, pstm, null);

            }

        }

    }

    // Atualiza o registro no banco de dados
    public void updateData() {

        // Cria caixa de diálogo popup para confirmação
        int dialogButton = PopUps.showConfirm("Oooops!", "Tem certeza que deseja salvar as alterações?");

        // Se clicou em Sim
        if (dialogButton == 0) {

            try {

                // Atualiza a tabela trecos com os valores dos campos
                String sql = "UPDATE videogame SET t_date = ?, t_type = ?, t_title = ?, t_sinopse = ?, t_status = ? WHERE t_id = ?";

                // Conexão com o banco de dados
                conn = dbConnection.dbConnect();

                // Preparar a query
                pstm = conn.prepareStatement(sql);

                // Substitui os "?" no SQL pelos valores corretos
                pstm.setString(6, txtEditId.getText());
                pstm.setString(1, txtEditDate.getText());
                pstm.setString(2, txtEditType.getText());
                pstm.setString(3, txtEditTitle.getText());
                pstm.setString(3, txtEditPlataforma.getText());
                pstm.setString(3, txtEditMidia.getText());
                pstm.setString(4, txtEditSinopse.getText());

                // Trata o campo status
                if (txtEditStatus.isSelected()) {
                    pstm.setString(5, "on");
                } else {
                    pstm.setString(5, "off");
                }

                // Executa a query
                pstm.executeUpdate();

                // Atualiza a listagem de registros
                readAll();

                // Mostra a listagem de registros
                openCard("cardReadAll");

            } catch (SQLException error) {

                // Se ocorrer erro de SQL, exibe no popup
                PopUps.showError("Main.deleteData\n" + error);

            } finally {

                // Fecha conexões e recursos abertos      
                dbConnection.dbClose(conn, pstm, null);

            }
        }
    }

    // Fecha o aplicativo com um popup de confirmação
    public void exitApp() {

        // Cria caixa de diálogo popup
        int dialogButton = PopUps.showConfirm("Saindo...", "Tem certeza que deseja sair do aplicativo?");

        // Se clicou em Sim
        if (dialogButton == 0) {

            // Fecha aplicativo
            System.exit(0);

        }
    }

    // Apaga todos os campos do formulário de cadastro
    public void formAddClear() {

        txtAddType.setText("");
        txtAddTitle.setText("");
        txtAddSinopse.setText("");

    }

    // Cria um novo registro no banco de dados
    public void formAddSave() {

        try {

            // SQL → Insere um novo registro
            String sql = "INSERT INTO videogame (t_type, t_title, t_sinopse, t_plataforma, t_midia) VALUES (?, ?, ?, ?, ?)";

            // Conexão com o banco de dados
            conn = dbConnection.dbConnect();

            // Preparar a query
            pstm = conn.prepareStatement(sql);

            // Substitui os "?" no SQL pelos valores corretos
            pstm.setString(1, txtAddType.getText());
            pstm.setString(2, txtAddTitle.getText());
            pstm.setString(3, txtAddSinopse.getText());
            pstm.setString(4, txtAddPlataforma.getText());
                pstm.setString(5, txtAddMidia.getText());

            // Executa a query
            pstm.executeUpdate();

            // Atualiza a listagem de registros
            readAll();

            // Mostra a listagem de registros
            openCard("cardReadAll");

        } catch (SQLException error) {

            // Se ocorrer erro de SQL, exibe no popup
            PopUps.showError("Main.deleteData\n" + error);

        } finally {

            // Fecha conexões e recursos abertos      
            dbConnection.dbClose(conn, pstm, null);

        }
    }
}